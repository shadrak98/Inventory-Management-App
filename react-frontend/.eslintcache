[{"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/index.js":"1","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/App.js":"2","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/reportWebVitals.js":"3","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/Locations.js":"4","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/Products.js":"5","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/ProductMovement.js":"6","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Nav.js":"7","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Dropdown.js":"8","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/MoveForm.js":"9","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ExportForm.js":"10","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ImportForm.js":"11","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ModalForm.js":"12","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/EditForm.js":"13"},{"size":590,"mtime":1609683386372,"results":"14","hashOfConfig":"15"},{"size":771,"mtime":1609514817850,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609337030680,"results":"17","hashOfConfig":"15"},{"size":3938,"mtime":1612669680151,"results":"18","hashOfConfig":"15"},{"size":3607,"mtime":1612606272057,"results":"19","hashOfConfig":"15"},{"size":5975,"mtime":1612606860150,"results":"20","hashOfConfig":"15"},{"size":693,"mtime":1609394971336,"results":"21","hashOfConfig":"15"},{"size":508,"mtime":1609849721025,"results":"22","hashOfConfig":"15"},{"size":2934,"mtime":1612541865486,"results":"23","hashOfConfig":"15"},{"size":1893,"mtime":1612587758850,"results":"24","hashOfConfig":"15"},{"size":1868,"mtime":1612541626940,"results":"25","hashOfConfig":"15"},{"size":3658,"mtime":1612608271192,"results":"26","hashOfConfig":"15"},{"size":1258,"mtime":1612671358323,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1p6llec",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/index.js",[],["62","63"],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/App.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/reportWebVitals.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/Locations.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/Products.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/ProductMovement.js",["64","65"],"import React, { useState, useEffect } from \"react\";\n// import { Button, Modal, Form, ModalDescription } from 'semantic-ui-react';\nimport axios from \"axios\";\nimport Dropdown from \"../Components/Dropdown\";\n// import MoveForm from \"../Components/MoveForm\";\n// import ExportForm from \"../Components/ExportForm\";\n// import ImportForm from \"../Components/ImportForm\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport ModalForm from \"../Components/ModalForm\";\n\n// import Modalbox from '../Components/Modalbox';\n\nconst ProductMovemnent = () => {\n  const [movements, setMovements] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [openE, setOpenE] = useState(false);\n  const [openM, setOpenM] = useState(false);\n\n  const toggle = () => setOpen(!open);\n  const exportToggle = () => setOpenE(!openE);\n  const moveToggle = () => setOpenM(!openM);\n\n  useEffect(() => {\n    fetchlocations();\n    fetchMovements();\n  }, []);\n\n  useEffect(() => {\n    if (location != \"\") {\n      console.log(\"inside useeffect -- loca\");\n      loca();\n    }\n  }, [location]);\n\n  const submitModal = (modal) => {\n    if (modal === \"import\") {\n      setOpen(false);\n    } else if (modal === \"export\") {\n      setOpenE(false);\n    } else if (modal === \"move\") {\n      setOpenM(false);\n    }\n    loca();\n  };\n\n  const fetchlocations = async () => {\n    const response = await fetch(\"/locations\");\n    const data = await response.json();\n    // console.log(data);\n    setOptions(data);\n  };\n\n  const changeHandler = (e) => {\n    // console.log(e.target.textContent);\n    setLocation(e.target.textContent);\n    loca();\n  };\n\n  const loca = () => {\n    console.log(\"loca=\" + location);\n    axios\n      .get(`/productmovements?location=${location}`)\n      .then((res) => {\n        // console.log(res.data+\"hyderrabad\");\n        setMovements(res.data);\n        // setExportOptions(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const fetchMovements = async () => {\n    // const response = await fetch('/productmovement');\n    // const data = await response.json();\n    axios\n      .get(\"/productmovement\")\n      .then((res) => {\n        // console.log(\"sahdrak\");\n        // console.log(res.data);\n        setMovements(res.data);\n      })\n      .catch((err) => {\n        console.log(err + \" error\");\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <h1>ProductMovemnent Page</h1>\n        <div className=\"dropdown\">\n          <Dropdown changeHandler={changeHandler} options={options} />\n        </div>\n        <div className=\"button\">\n          <div className=\"row-element\">\n            <Button\n              onClick={toggle}\n              disabled={location ? false : true}\n              color=\"primary\"\n            >\n              Import Item\n            </Button>\n          </div>\n          <div className=\"row-element\">\n            <Button\n              onClick={moveToggle}\n              disabled={location ? false : true}\n              color=\"primary\"\n            >\n              Move Item\n            </Button>\n          </div>\n          <div className=\"row-element\">\n            <Button\n              onClick={exportToggle}\n              disabled={location ? false : true}\n              color=\"primary\"\n            >\n              Export Item\n            </Button>\n          </div>\n        </div>\n\n        \n    \n        {/* Import Item Modal */}\n        <Modal size=\"large\" isOpen={open} toggle={toggle}>\n          <ModalHeader>Import Item</ModalHeader>\n          <ModalBody>\n            {/* <ImportForm location={location} /> */}\n            <ModalForm location={location} formType=\"import\" onClose={(modal) =>submitModal(modal)}/>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        {/* Export Item Modal */}\n        <Modal size=\"large\" isOpen={openE} toggle={exportToggle}>\n          <ModalHeader>Export Item</ModalHeader>\n          <ModalBody>\n            {/* <ExportForm\n              location={location}\n              onClose={(modal) => submitModal(modal)}\n            /> */}\n            <ModalForm location={location} formType=\"export\" onClose={(modal) =>submitModal(modal)}/>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={exportToggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        {/* Move Item Modal */}\n        <Modal size=\"large\" isOpen={openM} toggle={moveToggle}>\n          <ModalHeader>Move Item</ModalHeader>\n          <ModalBody>\n            {/* <MoveForm location={location} /> */}\n            <ModalForm location={location} formType=\"move\" onClose={(modal) =>submitModal(modal)}/>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={moveToggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        <div className=\"table-box\">\n          <table className=\"ui celled table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Quantity</th>\n              </tr>\n            </thead>\n            {/* {console.log(movements + \"movements\")} */}\n            {movements.map((movement) => (\n              <MovementTable\n                key={movement}\n                id={movement[0]}\n                name={movement[1]}\n                quantity={movement[2]}\n              />\n            ))}\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst MovementTable = ({ id, name, quantity }) => {\n  return (\n    <tbody>\n      <tr>\n        <td>{id}</td>\n        <td>{name}</td>\n        <td>{quantity}</td>\n      </tr>\n    </tbody>\n  );\n};\n\nexport default ProductMovemnent;\n","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Nav.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Dropdown.js",["66"],"import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\n\nconst Dropdownmenu = ({changeHandler, options}) => {\n\n    let lol = []\n\n    return (\n        <Dropdown\n            placeholder='Select Location'\n            compact\n            selection\n            options={lol = options.map(items => ({\n                key:items[0],\n                text:items[1],\n                value:items[1]\n            }))}\n            onChange={changeHandler}\n        />\n    );\n}\n\nexport default Dropdownmenu;","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/MoveForm.js",["67"],"import React, { useState, useEffect } from 'react';\nimport { Form, Button, Label, Input, FormGroup, Row } from 'reactstrap';\nimport Dropdown from './Dropdown';\nimport axios from 'axios';\n\nconst MoveForm = ({ location }) => {\n\n    const[productOptions, setProductOptions] = useState([])\n    const[locationOptions, setLocationOptions] = useState([])\n    const[quantity, setQuantity] = useState(\"\")\n    const[product, setProduct] = useState(\"\")\n    const[place, setPlace] = useState(\"\")\n\n    useEffect(() => {\n        fetchProducts();\n        fetchLocations();\n    },[]);\n\n    const productHandler = (e) => {\n        setProduct(e.target.textContent);\n    }\n\n    const locationHandler = (e) => {\n        setPlace(e.target.textContent);\n    }\n\n    const fetchProducts = () => {\n        console.log(\"MoveForm, location=\"+location);\n        axios.get(`/productmovements?location=${location}`)\n        .then(res => {\n            setProductOptions(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    const fetchLocations = () => {\n        console.log(\"location=\"+location);\n        axios.get(`/locations?location=${location}`)\n        .then(res => {\n            setLocationOptions(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    const moveFormHandler = () => {\n        // e.preventDefault();\n        console.log(place + \" \" + product + \" \" + quantity);\n        axios.post(`/productmovement?product=${product}&from=${location}&to=${place}&quantity=${quantity}`)\n        .then(res => {\n            console.log(res);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        setPlace(\"\");\n        setProduct(\"\");\n        setQuantity(\"\");\n    }\n\n    return(\n        <article>\n        <Form className=\"form\">\n            <div className=\"row\">\n                <Row>\n                    <div className=\"row-element\">\n                        <FormGroup>\n                            <Label>Product </Label>\n                            <Dropdown changeHandler={productHandler} options={productOptions}></Dropdown>\n                        </FormGroup>\n                    </div>\n                    <div className=\"row-element\">\n                        <FormGroup>\n                            <Label>Location </Label>\n                            <Dropdown changeHandler={locationHandler} options={locationOptions}></Dropdown>\n                        </FormGroup>\n                    </div>\n                </Row>\n            </div>\n            <FormGroup>\n                <Label>Quantity</Label>\n                <Input type=\"text\" id=\"quantity\" name=\"quantity\" placeholder=\"quantity\" value={quantity} onChange={(e) => {setQuantity(e.target.value)}} />\n            </FormGroup>\n            <Button type=\"button\" onclick={()=>moveFormHandler()}>Submit</Button> \n        </Form>\n        </article>\n    );\n}\n\nexport default MoveForm;",["68","69"],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ExportForm.js",["70"],"import React, { useState, useEffect } from 'react';\nimport { Form, FormGroup, Input, Label, Button } from 'reactstrap';\nimport Dropdown from './Dropdown';\nimport axios from 'axios';\n\nconst ExportForm = ({ location, onClose  }) => {\n\n    const[productOptions, setProductOptions] = useState([]);\n    const[quantity, setQuantity] = useState(\"\")\n    const[product, setProduct] = useState(\"\")\n\n    useEffect(() => {\n        fetchProducts();\n    },[]);\n\n    const productHandler = (e) => {\n        setProduct(e.target.textContent);\n    }\n\n    const fetchProducts = () => {\n        console.log(\"ExportForm, location=\"+location);\n        axios.get(`/productmovements?location=${location}`)\n        .then(res => {\n            setProductOptions(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    const exportFormHandler = () => {\n        axios.post(`/productmovement?product=${product}&from=${location}&to=NULL&quantity=${quantity}`)\n        .then(res => {\n            console.log(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        console.log(\"ok\")\n        onClose(\"export\")\n        setProduct(\"\");\n        setQuantity(\"\");\n\n    }\n\n    return (\n        <article>\n            <Form className=\"form\">\n                <FormGroup>\n                    <Label>Product  </Label>\n                    <Dropdown changeHandler={productHandler} options={productOptions}></Dropdown>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Quantity </Label>\n                    <Input type=\"text\" name=\"quantity\" placeholder=\"quantity\" value={quantity} onChange={(e) => {setQuantity(e.target.value)}}/>\n                </FormGroup>\n                <Button type=\"button\" onClick={()=>exportFormHandler()}>Submit</Button>\n            </Form>\n        </article>\n    );\n}\n\nexport default ExportForm;","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ImportForm.js",["71"],"import React, { useState, useEffect } from 'react';\nimport { Form, FormGroup, Input, Label, Button } from 'reactstrap';\nimport Dropdown from './Dropdown';\nimport axios from 'axios';\n\nconst ImportForm = ({ location }) => {\n\n    const[productOptions, setProductOptions] = useState([]);\n    const[quantity, setQuantity] = useState(\"\")\n    const[product, setProduct] = useState(\"\")\n\n    useEffect(() => {\n        fetchProducts();\n    },[]);\n\n    const productHandler = (e) => {\n        setProduct(e.target.textContent);\n    }\n\n    const fetchProducts = () => {\n        console.log(\"ImportForm, location=\"+location);\n        axios.get('/products')\n        .then(res => {\n            setProductOptions(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    const importFormHandler = () => {\n        console.log(\"inside importForm handler\")\n        axios.post(`/productmovement?product=${product}&from=NULL&to=${location}&quantity=${quantity}`)\n        .then(res => {\n            console.log(res.data+\"import response\");\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        setProduct(\"\");\n        setQuantity(\"\");\n    }\n\n    return (\n        <article>\n            <Form className=\"form\">\n                <FormGroup>\n                    <Label>Product  </Label>\n                    <Dropdown changeHandler={productHandler} options={productOptions}></Dropdown>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Quantity </Label>\n                    <Input type=\"text\" name=\"quantity\" placeholder=\"quantity\" value={quantity} onChange={(e) => {setQuantity(e.target.value)}}/>\n                </FormGroup>\n                <Button type=\"button\" onClick={()=>importFormHandler()}>Submit</Button>\n            </Form>\n        </article>\n    );\n}\n\nexport default ImportForm;","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ModalForm.js",["72"],"import React, { useState, useEffect } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport { Form, Input, Label, Button, FormGroup, Row } from \"reactstrap\";\nimport axios from 'axios';\n\nconst ModalForm = ({ location, formType, onClose }) => {\n\n  const [quantity, setQuantity] = useState(\"\");\n  const [productOptions, setProductOptions] = useState([]);\n  const [locationOptions, setLocationOptions] = useState([]);\n  const [product, setProduct] = useState(\"\")\n  const [place, setPlace] = useState(\"\")\n\n  useEffect(() => {\n    fetchProducts();\n    fetchLocations();\n    console.log(formType);\n  },[]);\n  \n  const fetchProducts = () => {\n    if(formType === \"import\") {\n      axios.get('/products')\n        .then(res => {\n            setProductOptions(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    } else {\n      axios.get(`/productmovements?location=${location}`)\n      .then(res => {\n        setProductOptions(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  const fetchLocations = () => {\n    axios.get(`/locations?location=${location}`)\n    .then(res => {\n      setLocationOptions(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  const FormHandler = () => {\n\n    if(formType === \"move\") {      \n      console.log(place + \" \" + product + \" \" + quantity);\n      axios.post(`/productmovement?product=${product}&from=${location}&to=${place}&quantity=${quantity}`)\n      .then(res => {\n          console.log(res);\n      })\n      .catch(err => {\n          console.log(err);\n      });\n      setPlace(\"\");\n      setProduct(\"\");\n      setQuantity(\"\");\n      onClose(formType);\n    } else if(formType === \"export\") {\n      axios.post(`/productmovement?product=${product}&from=${location}&to=NULL&quantity=${quantity}`)\n        .then(res => {\n            console.log(res.data);    \n        })\n        .catch(err => {\n            console.log(err);\n        });\n      console.log(\"ok\")\n      onClose(formType);\n      setProduct(\"\");\n      setQuantity(\"\");\n    } else {\n      console.log(\"inside importForm handler\")\n      axios.post(`/productmovement?product=${product}&from=NULL&to=${location}&quantity=${quantity}`)\n      .then(res => {\n          console.log(res.data+\"import response\");\n      })\n      .catch(err => {\n          console.log(err);\n      });\n      onClose(formType);\n      setProduct(\"\");\n      setQuantity(\"\");\n    }\n  }\n\n  return (\n    <article>\n      <Form>\n        <div className=\"row\">\n          <Row>\n            <div className=\"row-element\">\n              <FormGroup>\n                <Label>Product</Label>\n                <Dropdown changeHandler={(e) => {setProduct(e.target.textContent)}} options={productOptions}></Dropdown>\n              </FormGroup>\n            </div>\n            <div className=\"row-element\">\n              <FormGroup disabled={(formType === \"move\")?false:true}>\n                <Label>Location </Label>\n                <Dropdown\n                  changeHandler={(e) => {setPlace(e.target.textContent)}}\n                  options={locationOptions}\n                ></Dropdown>\n              </FormGroup>\n            </div>\n          </Row>\n        </div>\n        <FormGroup>\n          <Label>Quantity </Label>\n          <Input\n            type=\"text\"\n            name=\"quantity\"\n            placeholder=\"quantity\"\n            value={quantity}\n            onChange={(e) => {\n              setQuantity(e.target.value);\n            }}\n          />\n        </FormGroup>\n        <Button type=\"button\" onClick={() => FormHandler()}>Submit</Button>\n      </Form>\n    </article>\n  );\n};\n\nexport default ModalForm;\n","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/EditForm.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":31,"column":18,"nodeType":"79","messageId":"80","endLine":31,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":35,"column":6,"nodeType":"83","endLine":35,"endColumn":16,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":14,"column":22,"nodeType":"87","messageId":"88","endLine":14,"endColumn":25},{"ruleId":"81","severity":1,"message":"89","line":17,"column":7,"nodeType":"83","endLine":17,"endColumn":9,"suggestions":"90"},{"ruleId":"73","replacedBy":"91"},{"ruleId":"75","replacedBy":"92"},{"ruleId":"81","severity":1,"message":"93","line":14,"column":7,"nodeType":"83","endLine":14,"endColumn":9,"suggestions":"94"},{"ruleId":"81","severity":1,"message":"93","line":14,"column":7,"nodeType":"83","endLine":14,"endColumn":9,"suggestions":"95"},{"ruleId":"81","severity":1,"message":"96","line":18,"column":5,"nodeType":"83","endLine":18,"endColumn":7,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loca'. Either include it or remove the dependency array.","ArrayExpression",["100"],"no-unused-vars","'lol' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchLocations' and 'fetchProducts'. Either include them or remove the dependency array.",["101"],["98"],["99"],"React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["102"],["103"],"React Hook useEffect has missing dependencies: 'fetchLocations', 'fetchProducts', and 'formType'. Either include them or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [loca, location]",{"range":"114","text":"115"},"Update the dependencies array to be: [fetchLocations, fetchProducts]",{"range":"116","text":"117"},"Update the dependencies array to be: [fetchProducts]",{"range":"118","text":"119"},{"range":"120","text":"119"},"Update the dependencies array to be: [fetchLocations, fetchProducts, formType]",{"range":"121","text":"122"},[1180,1190],"[loca, location]",[564,566],"[fetchLocations, fetchProducts]",[442,444],"[fetchProducts]",[432,434],[597,599],"[fetchLocations, fetchProducts, formType]"]