[{"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/index.js":"1","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/App.js":"2","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/reportWebVitals.js":"3","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/Locations.js":"4","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/Products.js":"5","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/ProductMovement.js":"6","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Nav.js":"7","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Dropdown.js":"8","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Modalbox.js":"9","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/MoveForm.js":"10","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ExportForm.js":"11","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ImportForm.js":"12","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ModalForm.js":"13"},{"size":590,"mtime":1609683386372,"results":"14","hashOfConfig":"15"},{"size":771,"mtime":1609514817850,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609337030680,"results":"17","hashOfConfig":"15"},{"size":2836,"mtime":1610263999569,"results":"18","hashOfConfig":"15"},{"size":2759,"mtime":1610264026872,"results":"19","hashOfConfig":"15"},{"size":5958,"mtime":1612585114678,"results":"20","hashOfConfig":"15"},{"size":693,"mtime":1609394971336,"results":"21","hashOfConfig":"15"},{"size":508,"mtime":1609849721025,"results":"22","hashOfConfig":"15"},{"size":1340,"mtime":1609690934418,"results":"23","hashOfConfig":"15"},{"size":2934,"mtime":1612541865486,"results":"24","hashOfConfig":"15"},{"size":1893,"mtime":1612587758850,"results":"25","hashOfConfig":"15"},{"size":1868,"mtime":1612541626940,"results":"26","hashOfConfig":"15"},{"size":3667,"mtime":1612588754279,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1p6llec",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/index.js",[],["58","59"],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/App.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/reportWebVitals.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/Locations.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/Products.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Pages/ProductMovement.js",["60","61","62","63","64"],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Nav.js",[],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Dropdown.js",["65"],"import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\n\nconst Dropdownmenu = ({changeHandler, options}) => {\n\n    let lol = []\n\n    return (\n        <Dropdown\n            placeholder='Select Location'\n            compact\n            selection\n            options={lol = options.map(items => ({\n                key:items[0],\n                text:items[1],\n                value:items[1]\n            }))}\n            onChange={changeHandler}\n        />\n    );\n}\n\nexport default Dropdownmenu;","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/Modalbox.js",["66","67"],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/MoveForm.js",["68"],"import React, { useState, useEffect } from 'react';\nimport { Form, Button, Label, Input, FormGroup, Row } from 'reactstrap';\nimport Dropdown from './Dropdown';\nimport axios from 'axios';\n\nconst MoveForm = ({ location }) => {\n\n    const[productOptions, setProductOptions] = useState([])\n    const[locationOptions, setLocationOptions] = useState([])\n    const[quantity, setQuantity] = useState(\"\")\n    const[product, setProduct] = useState(\"\")\n    const[place, setPlace] = useState(\"\")\n\n    useEffect(() => {\n        fetchProducts();\n        fetchLocations();\n    },[]);\n\n    const productHandler = (e) => {\n        setProduct(e.target.textContent);\n    }\n\n    const locationHandler = (e) => {\n        setPlace(e.target.textContent);\n    }\n\n    const fetchProducts = () => {\n        console.log(\"MoveForm, location=\"+location);\n        axios.get(`/productmovements?location=${location}`)\n        .then(res => {\n            setProductOptions(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    const fetchLocations = () => {\n        console.log(\"location=\"+location);\n        axios.get(`/locations?location=${location}`)\n        .then(res => {\n            setLocationOptions(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    const moveFormHandler = () => {\n        // e.preventDefault();\n        console.log(place + \" \" + product + \" \" + quantity);\n        axios.post(`/productmovement?product=${product}&from=${location}&to=${place}&quantity=${quantity}`)\n        .then(res => {\n            console.log(res);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        setPlace(\"\");\n        setProduct(\"\");\n        setQuantity(\"\");\n    }\n\n    return(\n        <article>\n        <Form className=\"form\">\n            <div className=\"row\">\n                <Row>\n                    <div className=\"row-element\">\n                        <FormGroup>\n                            <Label>Product </Label>\n                            <Dropdown changeHandler={productHandler} options={productOptions}></Dropdown>\n                        </FormGroup>\n                    </div>\n                    <div className=\"row-element\">\n                        <FormGroup>\n                            <Label>Location </Label>\n                            <Dropdown changeHandler={locationHandler} options={locationOptions}></Dropdown>\n                        </FormGroup>\n                    </div>\n                </Row>\n            </div>\n            <FormGroup>\n                <Label>Quantity</Label>\n                <Input type=\"text\" id=\"quantity\" name=\"quantity\" placeholder=\"quantity\" value={quantity} onChange={(e) => {setQuantity(e.target.value)}} />\n            </FormGroup>\n            <Button type=\"button\" onclick={()=>moveFormHandler()}>Submit</Button> \n        </Form>\n        </article>\n    );\n}\n\nexport default MoveForm;","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ExportForm.js",["69"],"/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ImportForm.js",["70"],"import React, { useState, useEffect } from 'react';\nimport { Form, FormGroup, Input, Label, Button } from 'reactstrap';\nimport Dropdown from './Dropdown';\nimport axios from 'axios';\n\nconst ImportForm = ({ location }) => {\n\n    const[productOptions, setProductOptions] = useState([]);\n    const[quantity, setQuantity] = useState(\"\")\n    const[product, setProduct] = useState(\"\")\n\n    useEffect(() => {\n        fetchProducts();\n    },[]);\n\n    const productHandler = (e) => {\n        setProduct(e.target.textContent);\n    }\n\n    const fetchProducts = () => {\n        console.log(\"ImportForm, location=\"+location);\n        axios.get('/products')\n        .then(res => {\n            setProductOptions(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    const importFormHandler = () => {\n        console.log(\"inside importForm handler\")\n        axios.post(`/productmovement?product=${product}&from=NULL&to=${location}&quantity=${quantity}`)\n        .then(res => {\n            console.log(res.data+\"import response\");\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        setProduct(\"\");\n        setQuantity(\"\");\n    }\n\n    return (\n        <article>\n            <Form className=\"form\">\n                <FormGroup>\n                    <Label>Product  </Label>\n                    <Dropdown changeHandler={productHandler} options={productOptions}></Dropdown>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Quantity </Label>\n                    <Input type=\"text\" name=\"quantity\" placeholder=\"quantity\" value={quantity} onChange={(e) => {setQuantity(e.target.value)}}/>\n                </FormGroup>\n                <Button type=\"button\" onClick={()=>importFormHandler()}>Submit</Button>\n            </Form>\n        </article>\n    );\n}\n\nexport default ImportForm;","/home/shadrak/Projects/react-projects/flask-react-app/react-frontend/src/Components/ModalForm.js",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":16},{"ruleId":"76","severity":1,"message":"80","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":18},{"ruleId":"76","severity":1,"message":"81","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":31,"column":18,"nodeType":"84","messageId":"85","endLine":31,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":35,"column":6,"nodeType":"88","endLine":35,"endColumn":16,"suggestions":"89"},{"ruleId":"76","severity":1,"message":"90","line":14,"column":22,"nodeType":"78","messageId":"79","endLine":14,"endColumn":25},{"ruleId":"76","severity":1,"message":"91","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":25,"column":40,"nodeType":"94","messageId":"95","endLine":25,"endColumn":42},{"ruleId":"86","severity":1,"message":"96","line":17,"column":7,"nodeType":"88","endLine":17,"endColumn":9,"suggestions":"97"},{"ruleId":"86","severity":1,"message":"98","line":14,"column":7,"nodeType":"88","endLine":14,"endColumn":9,"suggestions":"99"},{"ruleId":"86","severity":1,"message":"98","line":14,"column":7,"nodeType":"88","endLine":14,"endColumn":9,"suggestions":"100"},{"ruleId":"86","severity":1,"message":"101","line":18,"column":5,"nodeType":"88","endLine":18,"endColumn":7,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'MoveForm' is defined but never used.","Identifier","unusedVar","'ExportForm' is defined but never used.","'ImportForm' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loca'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'lol' is assigned a value but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'fetchLocations' and 'fetchProducts'. Either include them or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["107"],["108"],"React Hook useEffect has missing dependencies: 'fetchLocations', 'fetchProducts', and 'formType'. Either include them or remove the dependency array.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [loca, location]",{"range":"119","text":"120"},"Update the dependencies array to be: [fetchLocations, fetchProducts]",{"range":"121","text":"122"},"Update the dependencies array to be: [fetchProducts]",{"range":"123","text":"124"},{"range":"125","text":"124"},"Update the dependencies array to be: [fetchLocations, fetchProducts, formType]",{"range":"126","text":"127"},[1171,1181],"[loca, location]",[564,566],"[fetchLocations, fetchProducts]",[442,444],"[fetchProducts]",[432,434],[597,599],"[fetchLocations, fetchProducts, formType]"]